{"ast":null,"code":"var _jsxFileName = \"/home/uday/Documents/fullStack/Project1/frontend/src/components/NotesView.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport NotesList from \"./NotesList\";\nimport { deleteNote } from \"../network/Note_api\";\nimport AddUpdateForm from \"./AddUpdateForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotesView = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false);\n  const [noteToEdit, setNoteToEdit] = useState(null);\n  useEffect(() => {\n    async function loadNotes() {\n      const res = await axios.get(\"http://localhost:5000/api/notes\");\n      setNotes(res.data);\n    }\n    loadNotes();\n  }, []);\n  const deletenote = async note => {\n    try {\n      await deleteNote(note._id);\n      setNotes(notes.filter(exisitingNote => exisitingNote._id !== note._id));\n    } catch (error) {\n      console.error(error);\n      alert(error);\n    }\n  };\n  const noteClicked = note => {\n    setShowUpdateModal(true);\n    setNoteToEdit(note);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"ms-auto mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setShowAddModal(true),\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes,\n        onDeleteClicked: note => deletenote(note),\n        onNoteClicked: note => noteClicked(note)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), showAddModal && /*#__PURE__*/_jsxDEV(AddUpdateForm, {\n      onDismiss: () => setShowAddModal(false),\n      onNoteSaved: newNote => {\n        setNotes([...notes, newNote]);\n        setShowAddModal(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), showUpdateModal && noteToEdit && /*#__PURE__*/_jsxDEV(AddUpdateForm, {\n      onDismiss: () => setShowUpdateModal(false),\n      noteToEdit: noteToEdit,\n      onNoteSaved: updatedNote => {\n        setNotes(notes.map(note => note._id === updatedNote._id ? updatedNote : note));\n        setShowUpdateModal(false);\n        setNoteToEdit(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(NotesView, \"sBPnKuSQU2+B6GQKjDLmznng3OA=\");\n_c = NotesView;\nexport default NotesView;\nvar _c;\n$RefreshReg$(_c, \"NotesView\");","map":{"version":3,"names":["axios","useEffect","useState","Button","Container","NotesList","deleteNote","AddUpdateForm","jsxDEV","_jsxDEV","Fragment","_Fragment","NotesView","_s","notes","setNotes","showAddModal","setShowAddModal","showUpdateModal","setShowUpdateModal","noteToEdit","setNoteToEdit","loadNotes","res","get","data","deletenote","note","_id","filter","exisitingNote","error","console","alert","noteClicked","children","className","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onDeleteClicked","onNoteClicked","onDismiss","onNoteSaved","newNote","updatedNote","map","_c","$RefreshReg$"],"sources":["/home/uday/Documents/fullStack/Project1/frontend/src/components/NotesView.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { NoteModal } from \"../models/NoteModal\";\nimport { Button, Container } from \"react-bootstrap\";\nimport NotesList from \"./NotesList\";\nimport { deleteNote } from \"../network/Note_api\";\nimport AddUpdateForm from \"./AddUpdateForm\";\n\n\nconst NotesView = () => {\n\n    const [notes, setNotes] = useState<NoteModal[]>([])\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [showUpdateModal, setShowUpdateModal] = useState(false);\n    const [noteToEdit, setNoteToEdit] = useState<NoteModal | null>(null);\n\n    useEffect(() => {\n        async function loadNotes() {\n            const res = await axios.get(\"http://localhost:5000/api/notes\");\n            setNotes(res.data);\n        }\n        loadNotes();\n    }, []);\n\n    const deletenote = async (note: NoteModal) => {\n        try {\n            await deleteNote(note._id);\n            setNotes(notes.filter(exisitingNote => exisitingNote._id !== note._id));\n        } catch (error) {\n            console.error(error);\n            alert(error);\n        }\n    };\n\n    const noteClicked = (note: any) => {\n        setShowUpdateModal(true);\n        setNoteToEdit(note);\n    };\n\n    return (\n        <>\n            <Container className='ms-auto mt-3'>\n                <Button\n                    variant='primary'\n                    onClick={() => setShowAddModal(true)}\n                >Add Note</Button>\n                <NotesList\n                    notes={notes}\n                    onDeleteClicked={(note) => deletenote(note)}\n                    onNoteClicked={(note) => noteClicked(note)}\n                />\n            </Container>\n            {\n                showAddModal &&\n                <AddUpdateForm\n                    onDismiss={() => setShowAddModal(false)}\n                    onNoteSaved={(newNote) => {\n                        setNotes([...notes, newNote]);\n                        setShowAddModal(false);\n                    }}\n                />\n            }\n\n            {\n                showUpdateModal && noteToEdit &&\n                <AddUpdateForm\n                    onDismiss={() => setShowUpdateModal(false)}\n                    noteToEdit={noteToEdit}\n                    onNoteSaved={(updatedNote) => {\n                        setNotes(notes.map(\n                            note => note._id === updatedNote._id\n                                ? updatedNote\n                                : note\n                        ))\n                        setShowUpdateModal(false)\n                        setNoteToEdit(null)\n                    }}\n                />\n            }\n        </>\n    )\n};\n\nexport default NotesView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}