{"ast":null,"code":"var _jsxFileName = \"/home/uday/Documents/fullStack/Project1/frontend/src/components/Note.tsx\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { FormatDate } from \"../utility/FormatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = _ref => {\n  let {\n    note,\n    onNoteClicked,\n    onDeleteClicked\n  } = _ref;\n  const {\n    title,\n    text,\n    createdAt,\n    updatedAt\n  } = note;\n  let createdUpdatedText;\n  if (updatedAt > createdAt) {\n    createdUpdatedText = `Updated at : ${FormatDate(updatedAt)}`;\n  } else {\n    createdUpdatedText = `Created at : ${FormatDate(createdAt)}`;\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    onClick: () => onNoteClicked(note),\n    className: \"ms-auto mt-2\",\n    style: {\n      backgroundColor: \"#fafafafa\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n      className: \"muted-text\",\n      children: [createdUpdatedText, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        style: {\n          width: 200\n        },\n        onClick: e => {\n          onDeleteClicked(note);\n          e.stopPropagation();\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["Button","Card","FormatDate","jsxDEV","_jsxDEV","Note","_ref","note","onNoteClicked","onDeleteClicked","title","text","createdAt","updatedAt","createdUpdatedText","onClick","className","style","backgroundColor","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","Footer","variant","width","e","stopPropagation","_c","$RefreshReg$"],"sources":["/home/uday/Documents/fullStack/Project1/frontend/src/components/Note.tsx"],"sourcesContent":["import { Button, Card } from \"react-bootstrap\";\nimport { NoteModal } from \"../models/NoteModal\"\nimport { FormatDate } from \"../utility/FormatDate\";\n\ninterface NoteProps {\n    note: NoteModal,\n    onNoteClicked: (note: NoteModal) => void,\n    onDeleteClicked: (note: NoteModal) => void,\n}\n\nconst Note = ({ note, onNoteClicked, onDeleteClicked }: NoteProps) => {\n\n    const {\n        title,\n        text,\n        createdAt,\n        updatedAt\n    } = note;\n\n    let createdUpdatedText;\n    if (updatedAt > createdAt) {\n        createdUpdatedText = `Updated at : ${FormatDate(updatedAt)}`;\n    } else {\n        createdUpdatedText = `Created at : ${FormatDate(createdAt)}`;\n    }\n\n    return (\n        <Card onClick={() => onNoteClicked(note)} className=\"ms-auto mt-2\" style={{ backgroundColor: \"#fafafafa\" }}>\n            <Card.Body>\n                <Card.Title>{title}</Card.Title>\n                <Card.Text>{text}</Card.Text>\n            </Card.Body>\n            <Card.Footer className=\"muted-text\">\n                {createdUpdatedText}\n                <Button variant=\"danger\" style={{ width: 200 }}\n                    onClick={(e) => {\n                        onDeleteClicked(note)\n                        e.stopPropagation()\n                    }}>\n                    Delete\n                </Button>\n            </Card.Footer>\n        </Card>\n    )\n};\n\nexport default Note;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAE9C,SAASC,UAAU,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnD,MAAMC,IAAI,GAAGC,IAAA,IAAyD;EAAA,IAAxD;IAAEC,IAAI;IAAEC,aAAa;IAAEC;EAA2B,CAAC,GAAAH,IAAA;EAE7D,MAAM;IACFI,KAAK;IACLC,IAAI;IACJC,SAAS;IACTC;EACJ,CAAC,GAAGN,IAAI;EAER,IAAIO,kBAAkB;EACtB,IAAID,SAAS,GAAGD,SAAS,EAAE;IACvBE,kBAAkB,GAAI,gBAAeZ,UAAU,CAACW,SAAS,CAAE,EAAC;EAChE,CAAC,MAAM;IACHC,kBAAkB,GAAI,gBAAeZ,UAAU,CAACU,SAAS,CAAE,EAAC;EAChE;EAEA,oBACIR,OAAA,CAACH,IAAI;IAACc,OAAO,EAAEA,CAAA,KAAMP,aAAa,CAACD,IAAI,CAAE;IAACS,SAAS,EAAC,cAAc;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAE;IAAY,CAAE;IAAAC,QAAA,gBACvGf,OAAA,CAACH,IAAI,CAACmB,IAAI;MAAAD,QAAA,gBACNf,OAAA,CAACH,IAAI,CAACoB,KAAK;QAAAF,QAAA,EAAET;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAChCrB,OAAA,CAACH,IAAI,CAACyB,IAAI;QAAAP,QAAA,EAAER;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACZrB,OAAA,CAACH,IAAI,CAAC0B,MAAM;MAACX,SAAS,EAAC,YAAY;MAAAG,QAAA,GAC9BL,kBAAkB,eACnBV,OAAA,CAACJ,MAAM;QAAC4B,OAAO,EAAC,QAAQ;QAACX,KAAK,EAAE;UAAEY,KAAK,EAAE;QAAI,CAAE;QAC3Cd,OAAO,EAAGe,CAAC,IAAK;UACZrB,eAAe,CAACF,IAAI,CAAC;UACrBuB,CAAC,CAACC,eAAe,CAAC,CAAC;QACvB,CAAE;QAAAZ,QAAA,EAAC;MAEP;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEf,CAAC;AAACO,EAAA,GAlCI3B,IAAI;AAoCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}